/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#include <stdint.h>

volatile uint32_t *clk = (uint32_t *)0x40023830;
volatile uint32_t *mode = (uint32_t *)0x40020c00;
volatile uint32_t *out = (uint32_t *)0x40020c14;
volatile uint32_t *in = (uint32_t *)0x40020c10;
volatile uint32_t *modeA = (uint32_t *)0x40020000;
volatile uint32_t *inA = (uint32_t *)0x40020010;

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
	*clk |= (1 << 3);
    /* Loop forever */
	*mode &= ~(7<<24);
	*mode |= (1<<26) | (1<<30);


	for(;;){
	*out |= (1<<15) | (1<<13);
	};

}
